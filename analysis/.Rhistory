library(ggplot2)
demo()
colors()
glm.vr
graphics
library(tidyverse)
installed.packages(tidyverse)
install.packages("tidyverse")
install.packages(c("nycflights13", "gapminder", "Lahman"))
install.packages(c("httr", "rvest", "xml2"))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = year, y = hwy))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = year, y = hwy))
ggplot(data = mpg)
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = cyl, y = hwy))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class), color="blue") + geom_point(mapping = aes(x = displ, y = cty, alpha= class), color="red")
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = cty))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = cty))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = cty))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = hwy, y = hwy, size = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = cty))
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, stroke = year))
?geom_point
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, group = year))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy), group = year)
?geom_point
ggplot(data = mpg) + geom_point(mapping = aes(colour = displ < 5))
ggplot(data = mpg) + geom_point(mapping = aes(x= displ, y = hwy, colour = displ < 5))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_grid(. ~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_grid(. ~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_wrap(. ~ cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=cty)) +
facet_wrap(~ cty)
?arrange
?geom_smooth
library(tidyverse)
?geom_smooth
library(tidyverse)
file_name <- "data/completion_time.csv"
data <- read_csv(name, col_names = TRUE, trim_ws = TRUE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(title = "Completion time increase with % byzantine nodes")
Visual(data)
data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE)
library(tidyverse)
library(ggrepel)
file_name <- "data/cpu_usage.csv"
cpu_data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
PowerUsage = col_double(),
TotalTime = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
cpu_data <- mutate(cpu_data, PowerTime=TotalTime*PowerUsage)
cpu_data <- mutate(cpu_data, CompleteTopology=paste(Topology, NumberOfNodes))
ggplot(cpu_data) +
geom_bar(mapping = aes(Platform, PowerTime, color = Byzantine))
facet_wrap(~CompleteTopology) +
labs(title = "Completion time increase with % byzantine nodes")
library(tidyverse)
library(ggrepel)
file_name <- "data/completion_time.csv"
data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
library(tidyverse)
library(ggrepel)
file_name <- "data/completion_time.csv"
data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
cd
getwd()
setwd(dir = "Scrivania/MARS-Simulator/analysis")
getwd()
library(tidyverse)
library(ggrepel)
file_name <- "data/completion_time_old.csv"
data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
data <- mutate(data, CompleteTopology=paste(Topology, NumberOfNodes))
ggplot(data, aes(Byzantine, TotalDuration, color = Platform)) +
facet_wrap(~CompleteTopology) +
geom_point(aes(shape = Config), size=3) +
geom_smooth() +
labs(title = "Completion time increase with % byzantine nodes")
ggplot(data, aes(Byzantine, TotalDuration, color = Platform)) +
facet_wrap(~CompleteTopology) +
geom_point(aes(shape = Config), size=3) +
geom_smooth() +
coord_cartesian(xlim = c(0, 30), ylim = c(0, 400), expand = FALSE) +
labs(title = "Completion time increase with % byzantine nodes")
ggplot(data, aes(Byzantine, TotalDuration, color = Platform)) +
facet_wrap(~CompleteTopology) +
geom_point(aes(shape = Config), size=3) +
geom_smooth() +
coord_cartesian(xlim = c(0, 30), ylim = c(0, 400), expand = TRUE) +
labs(title = "Completion time increase with % byzantine nodes")
View(data)
new_data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
View(new_data)
new_data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
View(new_data)
file_name <- "data/completion_time.csv"
data <- read_csv(file_name, col_names = TRUE, trim_ws = TRUE, col_types =
cols(
Topology = col_character(),
NumberOfNodes = col_integer(),
Platform = col_character(),
Byzantine = col_integer(),
MapDuration = col_double(),
ReduceDuration = col_double(),
TotalDuration = col_double(),
Updated = col_logical(),
Config = col_character()
)
)
data <- mutate(data, CompleteTopology=paste(Topology, NumberOfNodes))
data
